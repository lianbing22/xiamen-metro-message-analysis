spring:
  application:
    name: xiamen-metro-message-system

  profiles:
    active: dev

  # 数据库配置
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/xiamen_metro_message}
    username: ${DB_USER:metro_user}
    password: ${DB_PASSWORD:metro_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 5000ms

  # Jackson配置
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  http2:
    enabled: true

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置
logging:
  level:
    com.xiamen.metro: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 100MB
    max-history: 30

# MinIO配置
minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket-name: ${MINIO_BUCKET:metro-files}
  secure: false

# 文件管理配置
file:
  max-size: 104857600  # 100MB
  allowed-extensions: xlsx,xls,csv
  allowed-mime-types:
    - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
    - application/vnd.ms-excel
    - text/csv
    - application/csv

# API文档配置
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha

# 自定义配置
app:
  # JWT配置
  jwt:
    secret: ${JWT_SECRET:xiamen-metro-jwt-secret-key-2023}
    expiration: 86400000  # 24小时
    refresh-expiration: 604800000  # 7天

  # 系统配置
  system:
    name: "厦门地铁设备报文分析系统"
    version: "1.0.0"
    upload-path: ${UPLOAD_PATH:./uploads}
    max-message-size: 10485760  # 10MB

  # WebSocket配置
  websocket:
    max-connections: 1000
    heartbeat-interval: 30000  # 30秒

  # 缓存配置
  cache:
    default-ttl: 3600  # 1小时
    user-ttl: 1800     # 30分钟

# GLM-4.6配置
glm:
  api:
    url: ${GLM_API_URL:https://open.bigmodel.cn/api/coding/paas/v4}
    key: ${GLM_API_KEY:77519fea6df4468ea8a0a0dceb1e9df4.mkATxCcEaNh30hy7}
  rate-limit:
    requests-per-minute: ${GLM_RATE_LIMIT:1000}
  retry:
    max-attempts: ${GLM_RETRY_ATTEMPTS:3}
  encryption:
    key: ${GLM_ENCRYPTION_KEY:xiamen-metro-glm-2024}
  timeout:
    connect: 10000  # 10秒
    read: 30000     # 30秒
  cache:
    ttl: 86400      # 24小时
    error-ttl: 1800 # 30分钟

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

logging:
  level:
    com.xiamen.metro: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:postgresql://test-postgres:5432/xiamen_metro_message_test

  data:
    redis:
      host: test-redis

logging:
  level:
    com.xiamen.metro: INFO
    org.springframework.security: WARN

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

logging:
  level:
    com.xiamen.metro: WARN
    org.springframework.security: WARN
    root: INFO